{"version":3,"file":"static/js/831.8b13fb72.chunk.js","mappings":"uPAIe,SAASA,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SACpC,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAejB,OACE,+BACE,kBAAMC,UAAWC,EAAAA,QAAAA,KAAQP,SAVH,SAACQ,GACzBA,EAAEC,iBAEF,IAAIC,EAAeR,EAAWS,cAAcC,OAC5CZ,EAASU,GACTN,EAAS,UAAD,OAAWM,KAKjB,WACE,kBAAOG,MAAOX,EAAYY,SAfJ,SAACN,GAC3BL,EAAcK,EAAEO,OAAOF,QAcsCG,YAAY,8BAErE,mBAAQC,KAAK,SAAb,UACE,iBAAMX,UAAU,eAAhB,6B,kSC1BVY,IAAAA,SAAAA,QAAA,gCAEA,IAAMC,EAAU,mCACVC,EAAgB,mBAChBC,EAAgB,eAChBC,EAAa,QAEZ,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBL,IAAAA,IAAA,UAAaE,EAAb,oBAAsCD,IAD1D,cACGK,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACoBV,IAAAA,IAAA,UAAaG,EAAb,oBAAsCF,EAAtC,yBAA8DS,IADlF,cACGJ,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACoBZ,IAAAA,IAAA,UAAaI,EAAb,YAA2BQ,EAA3B,oBAAyCX,IAD7D,cACGK,EADH,OAEHO,QAAQC,IAAIR,EAASC,MAFlB,kBAGID,EAASC,MAHb,kEAMA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,uFACoBZ,IAAAA,IAAA,UAAaI,EAAb,YAA2BQ,EAA3B,4BAAiDX,IADrE,cACGK,EADH,OAEHO,QAAQC,IAAIR,EAASC,KAAKS,MAFvB,kBAGIV,EAASC,KAAKS,MAHlB,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BL,GAA/B,uFACoBZ,IAAAA,IAAA,UAAaI,EAAb,YAA2BQ,EAA3B,4BAAiDX,IADrE,cACGK,EADH,OAEHO,QAAQC,IAAIR,EAASC,KAAKC,SAFvB,kBAGIF,EAASC,KAAKC,SAHlB,oE,wICxBQ,SAASU,IACtB,OAA4BnC,EAAAA,EAAAA,UAAS,MAArC,eAAOoC,EAAP,KAAeC,EAAf,KACA,GAA0BrC,EAAAA,EAAAA,UAAS,IAAnC,eAAO2B,EAAP,KAAcW,EAAd,KACA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eAmBA,OAbAC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVd,GAAiBa,EAAaE,IAAI,SAEtC,GAAGF,EAAaE,IAAI,SAAU,CAC5B,IAAIjC,EAAe+B,EAAaE,IAAI,SAAShC,cAAcC,OAC3DgC,EAAAA,GAAyBlC,GAAcmC,MAAK,SAACC,GAAD,OAASR,EAAUQ,EAAIpB,gBAC9D,CACL,IAAIhB,EAAekB,EAAMjB,cAAcC,OACvCgC,EAAAA,GAAyBlC,GAAcmC,MAAK,SAACC,GAAD,OAASR,EAAUQ,EAAIpB,eAGpE,CAACE,EAAOa,KAGT,+BACE,6BACE,SAAC,UAAD,CAAazC,SApBE,SAAC4B,GACpBW,EAASX,OAqBL,eAAItB,UAAWC,EAAAA,QAAAA,OAAf,SACG8B,GACCA,EAAOU,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACT,eAAI3C,UAAWC,EAAAA,QAAAA,UAAf,UACE,UAAC,KAAD,CAAS2C,GAAE,kBAAapB,GAAxB,WACE,gBAAKxB,UAAWC,EAAAA,QAAAA,cAAhB,SACG0C,GACC,gBAAKE,IAAG,8CAAyCF,GAAeG,IAAI,MAEpE,gBAAKD,IAAK,gEAAiEC,IAAI,iBAInF,gBAAK9C,UAAWC,EAAAA,QAAAA,eAAhB,UACE,kBAAMD,UAAWC,EAAAA,QAAAA,sBAAjB,WACE,iCADF,IACgByC,GAAgB,qBAZLlB,e,2BCnC/C,WAAgB,KAAO,4B,4BCAvB,WAAgB,OAAS,2BAA2B,UAAY,8BAA8B,cAAgB,kCAAkC,sBAAwB,0CAA0C,yBAA2B","sources":["components/MovieSearch/MovieSearch.jsx","services/MovieAPI.js","views/MoviesView/MoviesView.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieSearch/movieSearch.module.scss?fb38","webpack://goit-react-hw-05-movies/./src/views/MoviesView/moviesView.module.scss?aa88"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport s from \"./movieSearch.module.scss\";\n\nexport default function MovieSearch({ onSubmit }) {\n  const [inputQuery, setInputQuery] = useState(\"\");\n  const navigate = useNavigate();\n\n\n  const onSearchInputChange = (e) => {\n    setInputQuery(e.target.value);\n  };\n\n  const onSearchBarSubmit = (e) => {\n    e.preventDefault();\n\n    let queriedValue = inputQuery.toLowerCase().trim();\n    onSubmit(queriedValue);\n    navigate(`?query=${queriedValue}`);\n  };\n\n  return (\n    <>\n      <form className={s.form} onSubmit={onSearchBarSubmit}>\n        <input value={inputQuery} onChange={onSearchInputChange} placeholder=\"Search images and photos\" />\n\n        <button type=\"submit\">\n          <span className=\"button-label\">Search</span>\n        </button>\n      </form>\n    </>\n  );\n}\n","import axios from 'axios';\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nconst API_KEY = 'c3dfb97c4e42ba6803ce4a8859444b9b';\nconst popularMovies = 'trending/all/day';\nconst queriedMovies = 'search/movie';\nconst byIdMovies = 'movie';\n\nexport async function getAllMovies() {\n    const response = await axios.get(`${popularMovies}?api_key=${API_KEY}`);\n    return response.data.results;\n}\n\nexport async function getQueriedMovie(query) {\n    const response = await axios.get(`${queriedMovies}?api_key=${API_KEY}&page=1&query=${query}`);\n    return response.data;\n}\n\nexport async function getMovieDetails(id) {\n    const response = await axios.get(`${byIdMovies}/${id}?api_key=${API_KEY}`);\n    console.log(response.data);\n    return response.data;\n}\n\nexport async function getMovieCredits(id) {\n    const response = await axios.get(`${byIdMovies}/${id}/credits?api_key=${API_KEY}`);\n    console.log(response.data.cast);\n    return response.data.cast;\n}\n\nexport async function getMovieReviews(id) {\n    const response = await axios.get(`${byIdMovies}/${id}/reviews?api_key=${API_KEY}`);\n    console.log(response.data.results);\n    return response.data.results;\n}","import React, { useEffect, useState } from \"react\";\nimport { NavLink, useSearchParams } from \"react-router-dom\";\nimport MovieSearch from \"../../components/MovieSearch\";\nimport * as movieAPI from \"../../services/MovieAPI\";\nimport s from \"./moviesView.module.scss\";\n\nexport default function MoviesView() {\n  const [movies, setMovies] = useState(null);\n  const [query, setQuery] = useState('');\n  const [searchParams] = useSearchParams();\n\n  const handleSubmit = (query) => {\n    setQuery(query);\n  };\n\n  useEffect(() => {\n    if (query === \"\" && !searchParams.get('query')) return;\n\n    if(searchParams.get('query')) {\n      let queriedValue = searchParams.get('query').toLowerCase().trim();\n      movieAPI.getQueriedMovie(queriedValue).then((res) => setMovies(res.results));\n    } else {\n      let queriedValue = query.toLowerCase().trim();\n      movieAPI.getQueriedMovie(queriedValue).then((res) => setMovies(res.results));\n    }\n\n  }, [query, searchParams]);\n\n  return (\n    <>\n      <main>\n        <MovieSearch onSubmit={handleSubmit} />\n\n        <ul className={s.search}>\n          {movies &&\n            movies.map(({ id, title, poster_path }) => (\n              <li className={s.search_el} key={id}>\n                <NavLink to={`/movies/${id}`}>\n                  <div className={s.search_el_pic}>\n                    {poster_path ? (\n                      <img src={`https://image.tmdb.org/t/p/original/${poster_path}`} alt=\"\" />\n                    ) : (\n                      <img src={\"https://miro.medium.com/max/400/1*Y9-6_bh5a00rJWWoQ28NMQ.jpeg\"} alt=\"character\" />\n                    )}\n                  </div>\n\n                  <div className={s.search_el_desc}>\n                    <span className={s.search_el_desc__title}>\n                      <b>Name:</b> {title ? title : \"Not found\"}\n                    </span>\n                  </div>\n                </NavLink>\n              </li>\n            ))}\n        </ul>\n      </main>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"movieSearch_form__BTqaf\"};","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"moviesView_search__EANua\",\"search_el\":\"moviesView_search_el__vnMNB\",\"search_el_pic\":\"moviesView_search_el_pic__mBGRb\",\"search_el_desc__title\":\"moviesView_search_el_desc__title__Zz4ZX\",\"search_el_desc__subtitle\":\"moviesView_search_el_desc__subtitle__8a8NQ\"};"],"names":["MovieSearch","onSubmit","useState","inputQuery","setInputQuery","navigate","useNavigate","className","s","e","preventDefault","queriedValue","toLowerCase","trim","value","onChange","target","placeholder","type","axios","API_KEY","popularMovies","queriedMovies","byIdMovies","getAllMovies","response","data","results","getQueriedMovie","query","getMovieDetails","id","console","log","getMovieCredits","cast","getMovieReviews","MoviesView","movies","setMovies","setQuery","useSearchParams","searchParams","useEffect","get","movieAPI","then","res","map","title","poster_path","to","src","alt"],"sourceRoot":""}